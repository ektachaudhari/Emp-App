package com.auskeny.ems.print;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Date;

import com.auskeny.ems.bdo.EmployeeBdo;
import com.auskeny.ems.hibernate.pojo.Employee;
import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;

public class EmployeeList {

	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
	private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
	private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD);
	private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

	public static void addMetaData(Document document) {
		document.addTitle("Employee List");
		document.addSubject("Using iText");
		document.addKeywords("Java, PDF, iText");
		document.addAuthor("Vikrant");
		document.addCreator("Vikrant");
	}

//	public static void addTitlePage(Document document) throws DocumentException {
//		Paragraph preface = new Paragraph();
//		// We add one empty line
//		addEmptyLine(preface, 1);
//		// Lets write a big header
//		preface.add(new Paragraph("Employee List", catFont));
//
//		addEmptyLine(preface, 1);
//		// Will create: Report generated by: _name, _date
//		preface.add(new Paragraph("Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
//				smallBold));
//		addEmptyLine(preface, 3);
//
//		preface.add(new Paragraph("This document is Display the list employee and signature is mandotory for Employee",
//				redFont));
//
//		document.add(preface);
//		// Start a new page
//		document.newPage();
//	}

	public static void addContent(Document document) throws DocumentException {
		Anchor anchor = new Anchor("Employee List", catFont);
		
		Chapter catPart = new Chapter(new Paragraph(anchor),1);

		Paragraph subPara = new Paragraph("", subFont);
		Section subCatPart = catPart.addSection(subPara);
//		subCatPart.add(new Paragraph(""));
		// add a table
		createTable(subCatPart);

		// now add all this to the document
		document.add(catPart);

	}

	private static void createTable(Section subCatPart) throws BadElementException {
		PdfPTable table = new PdfPTable(4);

		int[] tablesize={20,50,70,30};
		// t.setBorderColor(BaseColor.GRAY);
		// t.setPadding(4);
		// t.setSpacing(4);
		// t.setBorderWidth(1);
		try {
			table.setWidths(tablesize);
		} catch (DocumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
		PdfPCell c1 = new PdfPCell(new Phrase("No"));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);

		c1 = new PdfPCell(new Phrase("Employee Name"));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);

		c1 = new PdfPCell(new Phrase("Email"));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);

		c1 = new PdfPCell(new Phrase("Signature"));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);
		table.setHeaderRows(1);

		java.util.List<Employee> empList = new ArrayList<Employee>();
		empList = new EmployeeBdo().getAllEmployee();

		for (Employee emp : empList) {
			table.addCell(String.valueOf(emp.getEmpIdPk()));
			table.addCell(emp.getEmpName());
			table.addCell(emp.getEmpEmail());
			table.addCell(" ");

		}

		subCatPart.add(table);

	}
//
//	private static void addEmptyLine(Paragraph paragraph, int number) {
//		for (int i = 0; i < number; i++) {
//			paragraph.add(new Paragraph(" "));
//		}
//	}
}
